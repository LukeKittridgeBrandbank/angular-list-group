/**
 * angular-list-group
 * @version v0.0.0 - 2014-07-19
 * @link http://gnavarro77.github.io/angular-list-group
 * @author  ()
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(){"use strict";{var a=(angular.module("angularListGroup.services",[]),angular.module("angularListGroup.directives",[]));angular.module("angularListGroup.filters",[])}angular.module("angularListGroup",["angularListGroup.services","angularListGroup.directives","angularListGroup.filters"]),a.directive("listGroup",["$parse",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-group.html",scope:{items:"="},link:function(){}}}]),a.directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}),angular.module("anglarListGroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";var a=(angular.module("angularListGroup.services",[]),angular.module("angularListGroup.directives",[]));angular.module("angularListGroup.filters",[]),angular.module("angularListGroup",["angularListGroup.services","angularListGroup.directives","angularListGroup.filters"]),a.directive("listGroup",["$parse",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-group.html",scope:{items:"="},link:function(){}}}]),a.directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}),angular.module("anglarListGroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";var a=(angular.module("angularListGroup.services",[]),angular.module("angularListGroup.directives",[]));angular.module("angularListGroup.filters",[]),angular.module("angularListGroup",["angularListGroup.services","angularListGroup.directives","angularListGroup.filters"]),a.directive("listGroup",["$parse",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-group.html",scope:{items:"="},link:function(){}}}]),a.directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}),angular.module("anglarListGroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";var a=(angular.module("angularListGroup.services",[]),angular.module("angularListGroup.directives",[]));angular.module("angularListGroup.filters",[]),angular.module("angularListGroup",["angularListGroup.services","angularListGroup.directives","angularListGroup.filters"]),a.directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}),angular.module("anglarListGroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";var a=(angular.module("angularListGroup.services",[]),angular.module("angularListGroup.directives",[]));angular.module("angularListGroup.filters",[]),angular.module("angularListGroup",["angularListGroup.services","angularListGroup.directives","angularListGroup.filters"]),a.directive("listGroup",["$parse",function(){return{}}]),a.directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}),angular.module("anglarListGroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";var a=(angular.module("angularListGroup.services",[]),angular.module("angularListGroup.directives",[]));angular.module("angularListGroup.filters",[]),angular.module("angularListGroup",["angularListGroup.services","angularListGroup.directives","angularListGroup.filters"]),a.directive("listGroup",["$parse",function(){return{}}]),a.directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)
},a.init())}}}),angular.module("anglarListGroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("anglarListGroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("anglarListGroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("anglarListGroup",["anglarListGroup.templates"]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("anglarListGroup.templates").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("anglarListGroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("anglarListGroup.templates").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("anglarListGroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.ngModelCtrl.$render(),e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)
},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveInnerHTML(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveInnerHTML=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){var b=this.$modelValue;console.log("scope.ngModelCtrl.$render => "+JSON.stringify(b)),a.resolveInnerHTML(b)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span> $$model.html => {{$$model.html}}<input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){var b=this.$modelValue;console.log("scope.ngModelCtrl.$render => "+JSON.stringify(b)),a.resolveText(b)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span> $$model.html => {{$$model.html}}<input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$render(),e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){var b=this.$modelValue;console.log("scope.ngModelCtrl.$render => "+JSON.stringify(b)),a.resolveText(b)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){var b=this.$modelValue;console.log("scope.ngModelCtrl.$render => "+JSON.stringify(b)),a.resolveText(b)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(b){console.log("scope.ngModelCtrl.$render => "+JSON.stringify(b)),a.resolveText(b)
},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.startInlineEdition();else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.endInlineEdition()},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.endInlineEdition()},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.startInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===a.id?(d.push(b),d.push(c)):d.push(e)}),e.actions=d,e.$$model.editing=!0,n(function(){f.find("input")[0].select()})},e.endInlineEdition=function(){var d=[];angular.forEach(e.actions,function(e){e.id===b.id?d.push(a):e.id!==c.id&&d.push(e)}),e.actions=d,e.$$model.editing=!1},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditing(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditing(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditing(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditing=function(d){var g=[];angular.forEach(e.actions,function(e){d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.$$model.editing=d,n(function(){e.$$model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.html" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditing(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditing(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditing(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditing=function(d){var g=[];angular.forEach(e.actions,function(e){d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.$$model.editing=d,n(function(){e.$$model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditing(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditing(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditing(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditing=function(d){var g=[];angular.forEach(e.actions,function(e){d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.$$model.editing=d,n(function(){e.$$model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span> $$model.editing => {{$$model.editing}}<input type="text" class="form-control" ng-model="$$model.text" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditing(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditing(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditing(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditing=function(d){var g=[];angular.forEach(e.actions,function(e){d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.$$model.editing=d,n(function(){e.$$model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="$$model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!$$model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)
},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditing(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditing(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditing(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditing=function(d){var g=[];angular.forEach(e.actions,function(e){d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.$$model.editing=d,n(function(){e.$$model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:{},controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!1,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:{},controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else b=angular.isString(a)?a:angular.toJson(a,!0);e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(c){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=e.$eval(g.templateUrl);f&&l.get(f,{cache:m}).success(function(){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$templateCache","$timeout",function(e,f,g,h,i,j,k,l,m,n){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b="",a=e.ngModelCtrl.$modelValue;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=a,b=i(c)(d)}else if(e.hasAttribute("templateUrl")){var f=g.templateUrl;f&&l.get(f,{cache:m}).success(function(){var d=e.$new();d.item=a,b=i(c)(d),e.$$model.html=k.trustAsHtml(b)})}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,n(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$timeout",function(e,f,g,h,i,j,k,l,m){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else e.hasAttribute("templateUrl")||angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,m(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())
}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$timeout",function(e,f,g,h,i,j,k,l,m){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else e.hasAttribute("templateUrl")||angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,m(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$http","$timeout",function(e,f,g,h,i,j,k,l,m){e.$$model={selected:!1,html:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else e.hasAttribute("templateUrl")||angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.html=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.html),e.ngModelCtrl.$modelValue=e.$$model.html,e.setEditMode(!1)},e.$cancel=function(){e.$$model.html=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,m(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.html" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span ng-bind-html="$$model.text" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;
a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><span class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></span><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><div class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></div><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();d.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();e.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template);b=i(c)(e)}else angular.isString(a)||(b=angular.toJson(a,!0));e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)
},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template);b=i(c)(e)}angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template),d=e.$new();e.item=e.ngModelCtrl.$modelValue,b=i(c)(d)}angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template);e.$new(),e.item=e.ngModelCtrl.$modelValue,b=i(c)()}angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.$eval(g.template);b=i(c)(e)}angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;if(e.hasAttribute("template")){var c=e.eval(g.template);b=i(c)(e)}angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;e.hasAttribute("template")&&(b=i(j(g.template))(e)),angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$interpolate","$parse","$sce","$timeout",function(e,f,g,h,i,j,k,l){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;e.hasAttribute("template")&&(b=i(j(g.template))(scope)),angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=k.trustAsHtml(b)},e.selectionChange=function(a){j(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=j(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=j(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=j(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,l(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$parse","$sce","$timeout",function(e,f,g,h,i,j,k){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;e.hasAttribute("template")&&(b=h(i(g.template))(scope)),angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=j.trustAsHtml(b)},e.selectionChange=function(a){i(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=i(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=i(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=i(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,k(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$compile","$parse","$sce","$timeout",function(e,f,g,h,i,j,k){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;e.hasAttribute("template")&&(b=h(g.template)(scope)),angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=j.trustAsHtml(b)},e.selectionChange=function(a){i(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=i(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=i(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=i(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,k(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$sce","$timeout",function(e,f,g,h,i,j){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=i.trustAsHtml("<span>"+b+"</span>")},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,j(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text="<span>"+b+"</span>"},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,i(function(){e.model.editing&&f.find("input")[0].select()})},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.$$model={selected:!1,text:"",editing:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.model.editing=d,i(function(){e.model.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="model.editing"><p class="form-control" ng-bind="$$model.text" ng-if="!model.editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind-html="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group list-input-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a),console.log("selection changed ==> "+e.$$model.selected)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.hasAttribute("selectable")&&e.$watch("$$model.selected",e.selectionChange)},e.selectionChange=function(a){h(g.selectable).assign(e,a),console.log("selection changed ==> "+e.$$model.selected)},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.$watch("$$model.selected",function(a){h(g.selectable).assign(e,a),console.log("selection changed ==> "+e.$$model.selected)})},e.selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.$watch("$$model.selected",function(a){h(g.selectable).assign(a),console.log("selection changed ==> "+e.$$model.selected)})},e.selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.$watch("$$model.selected",function(){h(g.selectable),console.log("selection changed ==> "+e.$$model.selected)})},e.selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","?selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.$watch("$$model.selected",function(){h(g.selectable),console.log("selection changed ==> "+e.$$model.selected)})},e.selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel","selectable"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.selectableCtrl=d[1],a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.$$model={selected:!1,text:""},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions(),e.$watch("$$model.selected",function(){console.log("selection changed ==> "+e.$$model.selected)})},e.selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.$$model.text),e.ngModelCtrl.$modelValue=e.$$model.text,e.setEditMode(!1)},e.$cancel=function(){e.$$model.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.$$model.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span><input type="text" class="form-control" ng-model="$$model.text" ng-if="editing"><p class="form-control" ng-bind="$$model.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.text,e.$$model={selected:!1},e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions()},e.selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.text),e.ngModelCtrl.$modelValue=e.text,e.setEditMode(!1)},e.$cancel=function(){e.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$model.selected"></span> $$model.selected => {{$$model.selected}}<input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.text,e.$$selected,e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions()},e.selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.text),e.ngModelCtrl.$modelValue=e.text,e.setEditMode(!1)},e.$cancel=function(){e.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$selected"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.text,e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions()},e.selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.text),e.ngModelCtrl.$modelValue=e.text,e.setEditMode(!1)},e.$cancel=function(){e.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-change="selectionChanged()"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.text,e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions()},e.$selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.text),e.ngModelCtrl.$modelValue=e.text,e.setEditMode(!1)},e.$cancel=function(){e.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-change="\'$selectionChanged()\'"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:"$validate(item)"},c={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:"$cancel(item)"},d={id:"delete",icon:"glyphicon-trash",label:"remove",fn:"$delete(item)"},e=["$scope","$element","$attrs","$parse","$timeout",function(e,f,g,h,i){e.editing=!1,e.text,e.actions=[],e.options={action:{display:{label:!1,icon:!0}}},e.init=function(){e.resolveActions(),e.resolveOptions()},e.$selectionChanged=function(){console.log("selection changed!!")},e.$click=function(a){angular.isString(a)&&(a=h(a));var b=e.ngModelCtrl.$modelValue;a(e,{item:b})},e.$edit=function(){if(e.hasAttribute("inline"))e.setEditMode(!0);else if(e.hasAttribute("editFn")){var a=h(g.editFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.$validate=function(){e.ngModelCtrl.$setViewValue(e.text),e.ngModelCtrl.$modelValue=e.text,e.setEditMode(!1)},e.$cancel=function(){e.text=e.ngModelCtrl.$modelValue,e.setEditMode(!1)},e.$delete=function(){if(e.hasAttribute("deleteFn")){var a=h(g.deleteFn),b=e.ngModelCtrl.$modelValue;a(e,{item:b})}},e.isDropDown=function(a){return angular.isDefined(a.actions)},e.isSelectable=function(){return e.hasAttribute("selectable")},e.isLarge=function(){return e.isSizeEquals("large")},e.isSmall=function(){return e.isSizeEquals("small")},e.isSizeEquals=function(a){var b=!1;return e.hasAttribute("size")&&(b=g.size==a),b},e.resolveText=function(a){var b=a;angular.isDefined(b)&&!angular.isString(a)&&(b=angular.toJson(a,!0)),e.text=b},e.resolveActions=function(){var b=e.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?e.actions=b:e.actions.push(b)),e.hasAttribute("editable")&&e.actions.push(a),e.hasAttribute("deletable")&&e.actions.push(d)},e.resolveOptions=function(){if(e.hasAttribute("options")){var a=e.getAttributeAsObject("options");e.options=angular.extend(scope.options,a)}},e.setEditMode=function(d){var g=[];angular.forEach(e.actions,function(e){1==d?e.id===a.id?(g.push(b),g.push(c)):g.push(e):e.id===b.id?g.push(a):e.id!==c.id&&g.push(e)}),e.actions=g,e.editing=d,i(function(){e.editing&&f.find("input")[0].select()})},e.hasAttribute=function(a){return 1==angular.isDefined(g[a])},e.getAttributeAsObject=function(a){var b=g[a];return e.hasAttribute(a)&&angular.isString(b)&&(b=angular.fromJson(b)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:e,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:"$edit(item)"},b=["$scope","$element","$attrs","$parse","$timeout",function(b,c,d,e,f){b.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){b.$validate()}},b.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){b.$cancel()}},b.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){b.$delete()}},b.editing=!1,b.text,b.actions=[],b.options={action:{display:{label:!1,icon:!0}}},b.init=function(){b.resolveActions(),b.resolveOptions()},b.$selectionChanged=function(){},b.$click=function(a){angular.isString(a)&&(a=e(a));var c=b.ngModelCtrl.$modelValue;a(b,{item:c})},b.$edit=function(){if(b.hasAttribute("inline"))b.setEditMode(!0);else if(b.hasAttribute("editFn")){var a=e(d.editFn),c=b.ngModelCtrl.$modelValue;a(b,{item:c})}},b.$validate=function(){b.ngModelCtrl.$setViewValue(b.text),b.ngModelCtrl.$modelValue=b.text,b.setEditMode(!1)},b.$cancel=function(){b.text=b.ngModelCtrl.$modelValue,b.setEditMode(!1)},b.$delete=function(){if(b.hasAttribute("deleteFn")){var a=e(d.deleteFn),c=b.ngModelCtrl.$modelValue;a(b,{item:c})}},b.isDropDown=function(a){return angular.isDefined(a.actions)},b.isSelectable=function(){return b.hasAttribute("selectable")},b.isLarge=function(){return b.isSizeEquals("large")},b.isSmall=function(){return b.isSizeEquals("small")},b.isSizeEquals=function(a){var c=!1;return b.hasAttribute("size")&&(c=d.size==a),c},b.resolveText=function(a){var c=a;angular.isDefined(c)&&!angular.isString(a)&&(c=angular.toJson(a,!0)),b.text=c},b.resolveActions=function(){var c=b.getAttributeAsObject("actions");1==angular.isDefined(c)&&(angular.isArray(c)?b.actions=c:b.actions.push(c)),b.hasAttribute("editable")&&b.actions.push(a),b.hasAttribute("deletable")&&b.actions.push(b.ACTION_DELETE)},b.resolveOptions=function(){if(b.hasAttribute("options")){var a=b.getAttributeAsObject("options");b.options=angular.extend(scope.options,a)}},b.setEditMode=function(d){var e=[];angular.forEach(b.actions,function(c){1==d?c.id===a.id?(e.push(b.ACTION_VALIDATE),e.push(b.ACTION_CANCEL)):e.push(c):c.id===b.ACTION_VALIDATE.id?e.push(a):c.id!==b.ACTION_CANCEL.id&&e.push(c)}),b.actions=e,b.editing=d,f(function(){b.editing&&c.find("input")[0].select()})},b.hasAttribute=function(a){return 1==angular.isDefined(d[a])},b.getAttributeAsObject=function(a){var c=d[a];return b.hasAttribute(a)&&angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:b,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){$scope.$edit()}},b=["$scope","$element","$attrs","$parse","$timeout",function(b,c,d,e,f){b.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){b.$validate()}},b.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){b.$cancel()}},b.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){b.$delete()}},b.editing=!1,b.text,b.actions=[],b.options={action:{display:{label:!1,icon:!0}}},b.init=function(){b.resolveActions(),b.resolveOptions()},b.$selectionChanged=function(){},b.$click=function(a){angular.isString(a)&&(a=e(a));var c=b.ngModelCtrl.$modelValue;a(b,{item:c})},b.$edit=function(){if(b.hasAttribute("inline"))b.setEditMode(!0);else if(b.hasAttribute("editFn")){var a=e(d.editFn),c=b.ngModelCtrl.$modelValue;a(b,{item:c})}},b.$validate=function(){b.ngModelCtrl.$setViewValue(b.text),b.ngModelCtrl.$modelValue=b.text,b.setEditMode(!1)},b.$cancel=function(){b.text=b.ngModelCtrl.$modelValue,b.setEditMode(!1)},b.$delete=function(){if(b.hasAttribute("deleteFn")){var a=e(d.deleteFn),c=b.ngModelCtrl.$modelValue;a(b,{item:c})}},b.isDropDown=function(a){return angular.isDefined(a.actions)},b.isSelectable=function(){return b.hasAttribute("selectable")},b.isLarge=function(){return b.isSizeEquals("large")},b.isSmall=function(){return b.isSizeEquals("small")},b.isSizeEquals=function(a){var c=!1;return b.hasAttribute("size")&&(c=d.size==a),c},b.resolveText=function(a){var c=a;angular.isDefined(c)&&!angular.isString(a)&&(c=angular.toJson(a,!0)),b.text=c},b.resolveActions=function(){var c=b.getAttributeAsObject("actions");1==angular.isDefined(c)&&(angular.isArray(c)?b.actions=c:b.actions.push(c)),b.hasAttribute("editable")&&b.actions.push(a),b.hasAttribute("deletable")&&b.actions.push(b.ACTION_DELETE)},b.resolveOptions=function(){if(b.hasAttribute("options")){var a=b.getAttributeAsObject("options");b.options=angular.extend(scope.options,a)}},b.setEditMode=function(d){var e=[];angular.forEach(b.actions,function(c){1==d?c.id===a.id?(e.push(b.ACTION_VALIDATE),e.push(b.ACTION_CANCEL)):e.push(c):c.id===b.ACTION_VALIDATE.id?e.push(a):c.id!==b.ACTION_CANCEL.id&&e.push(c)}),b.actions=e,b.editing=d,f(function(){b.editing&&c.find("input")[0].select()})},b.hasAttribute=function(a){return 1==angular.isDefined(d[a])},b.getAttributeAsObject=function(a){var c=d[a];return b.hasAttribute(a)&&angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:b,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){$scope.$edit()}},b=["$scope","$element","$attrs","$parse","$timeout",function(b,c,d,e,f){b.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){b.$validate()}},b.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){b.$cancel()}},b.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){b.$delete()}},b.editing=!1,b.text,b.actions=[],b.options={action:{display:{label:!1,icon:!0}}},b.init=function(){b.resolveActions(),b.resolveOptions()},b.$selectionChanged=function(){},b.$click=function(a){angular.isString(a)&&(a=e(a));var c=b.ngModelCtrl.$modelValue;a(b,{item:c})},b.$edit=function(){if(b.hasAttribute("inline"))b.setEditMode(!0);else if(b.hasAttribute("editFn")){var a=e(d.editFn),c=b.ngModelCtrl.$modelValue;a(b,{item:c})}},b.$validate=function(){b.ngModelCtrl.$setViewValue(b.text),b.ngModelCtrl.$modelValue=b.text,b.setEditMode(!1)},b.$cancel=function(){b.text=b.ngModelCtrl.$modelValue,b.setEditMode(!1)},b.$delete=function(){if(b.hasAttribute("deleteFn")){var a=e(d.deleteFn),c=b.ngModelCtrl.$modelValue;a(b,{item:c})}},b.isDropDown=function(a){return angular.isDefined(a.actions)},b.isSelectable=function(){return b.hasAttribute("selectable")},b.isLarge=function(){return b.isSizeEquals("large")},b.isSmall=function(){return b.isSizeEquals("small")},b.isSizeEquals=function(a){var c=!1;return b.hasAttribute("size")&&(c=d.size==a),c},b.resolveText=function(a){var c=a;angular.isDefined(c)&&!angular.isString(a)&&(c=angular.toJson(a,!0)),b.text=c},b.resolveActions=function(){var c=b.getAttributeAsObject("actions");1==angular.isDefined(c)&&(angular.isArray(c)?b.actions=c:b.actions.push(c)),b.hasAttribute("editable")&&b.actions.push(a),b.hasAttribute("deletable")&&b.actions.push(b.ACTION_DELETE)},b.resolveOptions=function(){if(b.hasAttribute("options")){var a=b.getAttributeAsObject("options");b.options=angular.extend(scope.options,a)}},b.setEditMode=function(d){var e=[];angular.forEach(b.actions,function(c){1==d?c.id===a.id?(e.push(b.ACTION_VALIDATE),e.push(b.ACTION_CANCEL)):e.push(c):c.id===b.ACTION_VALIDATE.id?e.push(a):c.id!==b.ACTION_CANCEL.id&&e.push(c)}),b.actions=e,b.editing=d,f(function(){b.editing&&c.find("input")[0].select()})},b.hasAttribute=function(a){return 1==angular.isDefined(d[a])},b.getAttributeAsObject=function(a){var c=d[a];return b.hasAttribute(a)&&angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:b,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-change="$selectionChanged()"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.$$selected=!1,a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions(),a.$watch("$$selected",function(a,b){console.log("new => "+a),console.log("old => "+b)})},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSelectable=function(){return a.hasAttribute("selectable")},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$selected"></span> $$selected => {{$scope}}<input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.$$selected=!1,a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions(),a.$watch("$$selected",function(a,b){console.log("new => "+a),console.log("old => "+b)})},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSelectable=function(){return a.hasAttribute("selectable")},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$selected"></span> $$selected => {{$$selected}}<input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.$$selected=!1,a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions(),a.$watch("$$selected",function(a,b){console.log("new => "+a),console.log("old => "+b)})},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSelectable=function(){return a.hasAttribute("selectable")},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox" ng-model="$$selected"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSelectable=function(){return a.hasAttribute("selectable")},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon" ng-if="isSelectable()"><input type="checkbox"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><span class="input-group-addon"><input type="checkbox"></span><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p>large == {{isLarge()}}<div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p>large == {{isLarge()}}<div class="input-group-btn input-group-lg" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()
}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p>large == {{isLarge()}}<div class="input-group-btn" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-class="{\'input-group-lg\' : isLarge(), \'input-group-sm\' : isSmall()}" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isLarge=function(){return a.isSizeEquals("large")},a.isSmall=function(){return a.isSizeEquals("small")},a.isSizeEquals=function(b){var d=!1;return a.hasAttribute("size")&&(d=c.size==b),d},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions track by action.id"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && !isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><!-- \r\n		<div class="btn-group" ng-if="isDropDown(action) && isSplit(action)">\r\n			<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\r\n			<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">\r\n				<span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span\r\n					ng-bind="action.label" ng-if="options.action.display.label"></span>\r\n				<span class="caret"></span>\r\n			</button>\r\n				<ul class="dropdown-menu dropdown-menu-right" role="menu"\r\n					ng-if="isDropDown(action)">\r\n					<li ng-repeat="child in action.actions"><a ng-href\r\n						ng-click="$click(child.fn)"><span\r\n							class="glyphicon {{child.icon}}"\r\n							ng-if="options.action.display.icon"></span> <span\r\n							ng-bind="child.label"></span></a></li>\r\n				</ul>\r\n		</div>--><div class="btn-group" ng-if="isDropDown(action) && isSplit(action)"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span></button> <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && !isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><!-- \r\n		<div class="btn-group" ng-if="isDropDown(action) && isSplit(action)">\r\n			<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\r\n			<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">\r\n				<span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span\r\n					ng-bind="action.label" ng-if="options.action.display.label"></span>\r\n				<span class="caret"></span>\r\n			</button>\r\n				<ul class="dropdown-menu dropdown-menu-right" role="menu"\r\n					ng-if="isDropDown(action)">\r\n					<li ng-repeat="child in action.actions"><a ng-href\r\n						ng-click="$click(child.fn)"><span\r\n							class="glyphicon {{child.icon}}"\r\n							ng-if="options.action.display.icon"></span> <span\r\n							ng-bind="child.label"></span></a></li>\r\n				</ul>\r\n		</div>--><div ng-if="isDropDown(action) && isSplit(action)"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span></button> <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && !isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><!-- \r\n		<div class="btn-group" ng-if="isDropDown(action) && isSplit(action)">\r\n			<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\r\n			<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">\r\n				<span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span\r\n					ng-bind="action.label" ng-if="options.action.display.label"></span>\r\n				<span class="caret"></span>\r\n			</button>\r\n				<ul class="dropdown-menu dropdown-menu-right" role="menu"\r\n					ng-if="isDropDown(action)">\r\n					<li ng-repeat="child in action.actions"><a ng-href\r\n						ng-click="$click(child.fn)"><span\r\n							class="glyphicon {{child.icon}}"\r\n							ng-if="options.action.display.icon"></span> <span\r\n							ng-bind="child.label"></span></a></li>\r\n				</ul>\r\n		</div>--><div class="btn-group" ng-if="isDropDown(action) && isSplit(action)"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span></button> <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && !isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><!-- \r\n		<div class="btn-group" ng-if="isDropDown(action) && isSplit(action)">\r\n			<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\r\n			<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">\r\n				<span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span\r\n					ng-bind="action.label" ng-if="options.action.display.label"></span>\r\n				<span class="caret"></span>\r\n			</button>\r\n				<ul class="dropdown-menu dropdown-menu-right" role="menu"\r\n					ng-if="isDropDown(action)">\r\n					<li ng-repeat="child in action.actions"><a ng-href\r\n						ng-click="$click(child.fn)"><span\r\n							class="glyphicon {{child.icon}}"\r\n							ng-if="options.action.display.icon"></span> <span\r\n							ng-bind="child.label"></span></a></li>\r\n				</ul>\r\n		</div>--><div class="btn-group" ng-if="isDropDown(action) && isSplit(action)"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && !isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action) && !isSplit(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul><!-- \r\n		<div class="btn-group" ng-if="isDropDown(action) && isSplit(action)">\r\n			<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\r\n			<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">\r\n				<span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span\r\n					ng-bind="action.label" ng-if="options.action.display.label"></span>\r\n				<span class="caret"></span>\r\n			</button>\r\n				<ul class="dropdown-menu dropdown-menu-right" role="menu"\r\n					ng-if="isDropDown(action)">\r\n					<li ng-repeat="child in action.actions"><a ng-href\r\n						ng-click="$click(child.fn)"><span\r\n							class="glyphicon {{child.icon}}"\r\n							ng-if="options.action.display.icon"></span> <span\r\n							ng-bind="child.label"></span></a></li>\r\n				</ul>\r\n		</div>--><div class="btn-group" ng-if="isDropDown(action) && isSplit(action)"><button class="btn btn-default" type="button">Default</button> <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && !isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <!-- \r\n		<div class="btn-group" ng-if="isDropDown(action) && isSplit(action)">\r\n			<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\r\n			<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">\r\n				<span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span\r\n					ng-bind="action.label" ng-if="options.action.display.label"></span>\r\n				<span class="caret"></span>\r\n			</button>\r\n				<ul class="dropdown-menu dropdown-menu-right" role="menu"\r\n					ng-if="isDropDown(action)">\r\n					<li ng-repeat="child in action.actions"><a ng-href\r\n						ng-click="$click(child.fn)"><span\r\n							class="glyphicon {{child.icon}}"\r\n							ng-if="options.action.display.icon"></span> <span\r\n							ng-bind="child.label"></span></a></li>\r\n				</ul>\r\n		</div>--><div class="btn-group" ng-if="isDropDown(action) && isSplit(action)"><button class="btn btn-default" type="button">Default</button> <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="caret"></span> <span class="sr-only">Toggle Dropdown</span></button><ul class="dropdown-menu" role="menu"><li></li><li></li><li></li><li class="divider"></li><li></li></ul></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && !isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <!-- \r\n		<div class="btn-group" ng-if="isDropDown(action) && isSplit(action)">\r\n			<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">\r\n			<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button">\r\n				<span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span\r\n					ng-bind="action.label" ng-if="options.action.display.label"></span>\r\n				<span class="caret"></span>\r\n			</button>\r\n				<ul class="dropdown-menu dropdown-menu-right" role="menu"\r\n					ng-if="isDropDown(action)">\r\n					<li ng-repeat="child in action.actions"><a ng-href\r\n						ng-click="$click(child.fn)"><span\r\n							class="glyphicon {{child.icon}}"\r\n							ng-if="options.action.display.icon"></span> <span\r\n							ng-bind="child.label"></span></a></li>\r\n				</ul>\r\n		</div>--><div class="btn-group"><button class="btn btn-default" type="button">Default</button> <button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="caret"></span> <span class="sr-only">Toggle Dropdown</span></button><ul class="dropdown-menu" role="menu"><li></li><li></li><li></li><li class="divider"></li><li></li></ul></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && !isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><div class="btn-group" ng-if="isDropDown(action) && isSplit(action)"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></button></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action) && isSplit(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><div class="btn-group" ng-if="isDropDown(action) && isSplit(action)"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></button></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.isSplit=function(a){return a.split===!0},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><div class="btn-group" ng-if="isDropDown(action) && isSplit(action)"><button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><button class="btn btn-default dropdown-toggle" data-toggle="dropdown" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></button></div><button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span> <span class="sr-only">Toggle Dropdown</span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href="" ng-click="$click(child.fn)"><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> <span ng-bind="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> {{child}}<span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span> tets<span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b));var c=a.ngModelCtrl.$modelValue;b(a,{item:c})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString(b)&&(b=d(b)),b(a,{item:item})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="$click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString()&&(b=d(b)),b(a,{item:item})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="click(action.fn)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString()&&(b=d(b)),b(a,{item:item})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)
},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="click(action.fn())" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$click=function(b){angular.isString()&&(b=d(b)),b(a,{item:item})},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="click(action.fn())" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=d(c.deleteFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove",fn:function(){a.$delete()}},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.$delete=function(){if(a.hasAttribute("deleteFn")){var b=(d(c.deleteFn),a.ngModelCtrl.$modelValue);editFn(a,{item:b})}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;b(a,{item:e})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelValue;a.$apply(function(){b(a,{item:e})})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelView;a.$apply(function(){b(a,{item:e})})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn),e=a.ngModelCtrl.$modelView;a.$apply(function(){b(a,{item:e})})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)
},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=d(c.editFn);b({item:a.ngModelCtrl.$modelView})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=c.editFn;b({item:a.ngModelCtrl.$modelView})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){if(a.hasAttribute("inline"))a.setEditMode(!0);else if(a.hasAttribute("editFn")){var b=c.editFn;b({item:scope.ngModelCtrl.$modelView})}},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.ACTION_DELETE={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:!0,controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok","class":"btn-success",fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok","class":"btn-danger",fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn {{action.class}}" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()
},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn" ng-class="{\'btn-default\' : action.class == null}" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-success" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="$parent.text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.text=a.ngModelCtrl.$modelValue,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.ngModelCtrl,a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$watch("text",function(a){console.log("text => "+a)}),a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="$parent.text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$watch("text",function(a){console.log("text => "+a)}),a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$watch("text",function(){console.log("text => "+text)}),a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");
1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<div ng-if="editing"> --><input type="text" class="form-control" ng-model="text"><!-- 	</div> --><!-- 	<p class="form-control" ng-bind="text" ng-if="!editing"></p> --><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><div ng-if="editing"><input type="text" class="form-control" ng-model="text"></div><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=b;angular.isDefined(c)&&!angular.isString(b)&&(c=angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text,a.setEditMode(!1)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d
}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$modelValue=a.text},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text),a.ngModelCtrl.$commitViewValue()},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setModelValue(a.text)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setModelValue(a.text)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl.$setViewValue(a.text)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){a.ngModelCtrl},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){scope.ngModelCtrl},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],a.ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.init=function(){a.resolveActions(),a.resolveOptions()},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$validate=function(){scope.ngModelCtrl},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.ngModelCtrl=d[0],ngModelCtrl&&(a.ngModelCtrl.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input")[0].select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse","$timeout",function(a,b,c,d,e){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,e(function(){a.editing&&b.find("input").select()})},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse",function(a,b,c){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:{pre:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())},post:function(a){a.editing&&$element.find("input").select()}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse",function(a,b,c){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)
},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:{pre:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())},post:function(){$scope.editing&&$element.find("input").select()}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$element","$attrs","$parse",function(a,b,c){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(c){var d=[];angular.forEach(a.actions,function(b){1==c?b.id===a.ACTION_EDIT.id?(d.push(a.ACTION_VALIDATE),d.push(a.ACTION_CANCEL)):d.push(b):b.id===a.ACTION_VALIDATE.id?d.push(a.ACTION_EDIT):b.id!==a.ACTION_CANCEL.id&&d.push(b)}),a.actions=d,a.editing=c,c&&b.find("input").select()},a.hasAttribute=function(a){return 1==angular.isDefined(c[a])},a.getAttributeAsObject=function(b){var d=c[b];return a.hasAttribute(b)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b,a.input.select()},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(c){var d=b[c];return a.hasAttribute(c)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(b.querySelector(".form-control"),a.input=b.find("input"),e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b,a.input.select()},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(c){var d=b[c];return a.hasAttribute(c)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(a.input=b.find("input"),e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(c){var d=b[c];return a.hasAttribute(c)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(a.input=b.find("input"),e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(c){var d=b[c];return a.hasAttribute(c)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&($scope.input=b.find("input"),e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");1==angular.isDefined(b)&&(angular.isArray(b)?a.actions=b:a.actions.push(b)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(c){var d=b[c];return a.hasAttribute(c)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(c){var d=b[c];return a.hasAttribute(c)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var b=a.getAttributeAsObject("actions");angular.isArray(b)?a.actions=b:a.actions.push(b),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(c){var d=b[c];return a.hasAttribute(c)&&angular.isString(d)&&(d=angular.fromJson(d)),d}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$cancel()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.$cancel=function(){a.setEditMode(!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.ACTION_CANCEL={id:"remove",icon:"glyphicon-remove",label:"ok",hidden:!0,fn:function(){a.$remove()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode(!0)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(b){var c=[];angular.forEach(a.actions,function(d){1==b?d.id===a.ACTION_EDIT.id?(c.push(a.ACTION_VALIDATE),c.push(a.ACTION_CANCEL)):c.push(d):d.id===a.ACTION_VALIDATE.id?c.push(a.ACTION_EDIT):d.id!==a.ACTION_CANCEL.id&&c.push(d)}),a.actions=c,a.editing=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.editing=!1,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){a.hasAttribute("inline")&&a.setEditMode()},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(){var b=[];angular.forEach(a.actions,function(c){b.push(c.id===a.ACTION_EDIT.id?a.ACTION_VALIDATE:c)}),a.actions=b,a.editing=!0},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text" ng-if="editing"><p class="form-control" ng-bind="text" ng-if="!editing"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&a.setEditMode()},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(){var b=[];angular.forEach(a.actions,function(c){b.push(c.id===a.ACTION_EDIT.id?a.ACTION_VALIDATE:c)}),a.actions=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&a.setEditMode()},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.setEditMode=function(){var b=[];angular.forEach(a.actions,function(c){c.id===a.ACTION_EDIT.id?b.psuh(a.ACTION_VALIDATE):b.push(c)}),a.actions=b},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-trash",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.replaceAction=function(){for(var b=null,c=0;c<a.actions.length;c++)if(a.actions[c].id===id){b=a.actions[c];break}return b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="(!isDropDown(action) && !action.hidden)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&a.actions.push(a.ACTION_EDIT),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.replaceAction=function(){for(var b=null,c=0;c<a.actions.length;c++)if(a.actions[c].id===id){b=a.actions[c];break}return b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="(!isDropDown(action) && !action.hidden)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&(a.actions.push(a.ACTION_EDIT),a.actions.push(a.ACTION_VALIDATE)),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.findActionById=function(b){for(var c=null,d=0;d<a.actions.length;d++)if(a.actions[d].id===b){c=a.actions[d];break}return c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="(!isDropDown(action) && !action.hidden)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&(a.actions.push(a.ACTION_EDIT),a.actions.push(a.ACTION_VALIDATE)),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.findActionById=function(b){for(var c=null,d=0;d<a.actions.length;d++)if(a.actions[d].id===b){c=a.actions[d];break}return c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="(!isDropDown(action) && !action.hidden)"><span>{{action.hidden}}</span> <span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&(a.actions.push(a.ACTION_EDIT),a.actions.push(a.ACTION_VALIDATE)),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.findActionById=function(b){for(var c=null,d=0;d<a.actions.length;d++)if(a.actions[d].id===b){c=a.actions[d];break}return c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="(!isDropDown(action) && !hidden)"><span>{{hidden}}</span> <span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&(a.actions.push(a.ACTION_EDIT),a.actions.push(a.ACTION_VALIDATE)),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.findActionById=function(b){for(var c=null,d=0;d<a.actions.length;d++)if(a.actions[d].id===b){c=a.actions[d];break}return c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="(!isDropDown(action) && !hidden)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&(a.actions.push(a.ACTION_EDIT),a.actions.push(a.ACTION_VALIDATE)),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.findActionById=function(b){for(var c=null,d=0;d<a.actions.length;d++)if(a.actions[d].id===b){c=a.actions[d];break}return c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action) || !hidden"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",hidden:!0,fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&(a.actions.push(a.ACTION_EDIT),a.actions.push(a.ACTION_VALIDATE)),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.findActionById=function(b){for(var c=null,d=0;d<a.actions.length;d++)if(a.actions[d].id===b){c=a.actions[d];break}return c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action) && !hidden"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={id:"edit",icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.ACTION_VALIDATE={id:"validate",icon:"glyphicon-ok",label:"ok",fn:function(){a.$validate()}},a.DELETE_ACTION={id:"delete",icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit..........."),a.hasAttribute("inline")&&(a.findActionById(a.ACTION_EDIT.id).hidden=!0,a.findActionById(a.ACTION_VALIDATE.id).hidden=!1)},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c)),a.hasAttribute("editable")&&(a.actions.push(a.ACTION_EDIT),a.actions.push(a.ACTION_VALIDATE)),a.hasAttribute("deletable")&&a.actions.push(a.ACTION_DELETE)},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c},a.findActionById=function(b){for(var c=null,d=0;d<a.actions.length;d++)if(a.actions[d].id===b){c=a.actions[d];break}return c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action) && !hidden"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b){a.ACTION_EDIT={icon:"glyphicon-edit",label:"edit",fn:function(){a.$edit()}},a.DELETE_ACTION={icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit...........")},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:a.ACTION_EDIT,deletable:a.DELETE_ACTION};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn()" ng-if="!isDropDown(action) && !hidden"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.ACTION_EDIT={icon:"glyphicon-edit",label:"edit",fn:function(){console.log("$scope.$edit...........")}},a.DELETE_ACTION={icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:a.ACTION_EDIT,deletable:a.DELETE_ACTION};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn(ngModel)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.ACTION_EDIT={icon:"glyphicon-edit",label:"edit",fn:a.$edit},a.DELETE_ACTION={icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit...........")},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:a.ACTION_EDIT,deletable:a.DELETE_ACTION};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn(ngModel)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.ACTION_EDIT={icon:"glyphicon-edit",label:"edit",fn:"$edit()"},a.DELETE_ACTION={icon:"glyphicon-remove",label:"remove"},a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.$edit=function(){console.log("$scope.$edit...........")},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:a.ACTION_EDIT,deletable:a.DELETE_ACTION};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-click="action.fn(ngModel)" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp; <span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.editAction={icon:"glyphicon-edit",label:"edit"},a.deleteAction={icon:"glyphicon-remove",label:"remove"},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:a.editAction,deletable:a.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.isString(b)?b:angular.toJson(b,!0)),a.text=c},a.editAction={icon:"glyphicon-edit",label:"edit"},a.deleteAction={icon:"glyphicon-remove",label:"remove"},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:a.editAction,deletable:a.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){console.log("value == "+this.$modelValue),a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){a.resolveActions(),a.resolveOptions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},a.editAction={icon:"glyphicon-edit",label:"edit"},a.deleteAction={icon:"glyphicon-remove",label:"remove"},a.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:a.editAction,deletable:a.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},a.resolveOptions=function(){if(a.hasAttribute("options")){var b=a.getAttributeAsObject("options");a.options=angular.extend(scope.options,b)}},a.hasAttribute=function(a){return 1==angular.isDefined(b[a])},a.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){console.log("value == "+this.$modelValue),a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){this.resolveActions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){console.log("value == "+this.$modelValue),a.resolveText(this.$modelValue)},a.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){this.resolveActions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){console.log("value == "+this.$modelValue),$scope.resolveText(this.$modelValue)},$scope.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},a.init=function(){this.resolveActions()},a.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){console.log("value == "+this.$modelValue),$scope.resolveText(this.$modelValue)},$scope.init())}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){console.log("value == "+this.$modelValue)})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){console.log("value == "+this.$modelValue)})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(){console.log("value == "+this.$modelValue)})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e&&(e.$render=function(a){console.log("value == "+a)})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){var e=d[0];e.$render=function(a){console.log("value == "+a)},a.$watch(c.ngModel,function(a){console.log("value == "+a)})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){d[0],a.$watch(c.ngModel,function(a){console.log("value == "+a)})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a){a.$watch(a.ngModel,function(b){console.log("value == "+b),console.log("value == "+a.ngModel),ctrl.resolveText(a.ngModel)}),ctrl.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(a.ngModel,function(b){console.log("value == "+b),console.log("value == "+a.ngModel),d.resolveText(a.ngModel)}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(){console.log("value == "+a.ngModel),d.resolveText(a.ngModel)}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(){console.log("value == "+a.ngModel),d.resolveText(a.ngModel),a.text="yyyyyyyyyy"}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(b){console.log("value == "+a.ngModel),d.resolveText(b),a.text="yyyyyyyyyy"}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(b){console.log("value == "+b),d.resolveText(b),a.text="yyyyyyyyyy"}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(a){console.log("value == "+a),d.resolveText(a)}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(a){d.resolveText(a)}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(a){d.resolveText(a)}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{labelFn:"&"},controller:a,link:function(a,b,c,d){d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(a){d.resolveText(a)}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.$watch(c.ngModel,function(a){d.resolveText(a)}),d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){var b=d(a);this.resolveText(b),this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{labelFn:"&"},controller:a,link:function(a,b,c,d){d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){console.log("'$parse' => "+c);var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){var b=d(a);this.resolveText(b),this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){var b=d(a);this.resolveText(b),this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});angular.isUndefined(c)&&(c=angular.toJson(b,!0)),a.text=c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){var b=d(a);this.resolveText(b),this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){var b=d(a);this.resolveText(b),this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var c=b.actions;1==angular.isDefined(c)&&(c=angular.fromJson(c),angular.isArray(c)?a.actions=c:a.actions.push(c));var d={editable:this.editAction,deletable:this.deleteAction};for(var e in d)angular.isDefined(b[e])&&a.actions.push(d[e])},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-model="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){var b=d(a);this.resolveText(b),this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var a=b.actions;1==angular.isDefined(a)&&(a=angular.fromJson(a),angular.isArray(a)?scope.actions=a:scope.actions.push(a));var c={editable:this.editAction,deletable:this.deleteAction};for(var d in c)angular.isDefined(b[d])&&scope.actions.push(c[d])},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-model="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.init=function(){var b=d(a);this.resolveText(b),this.resolveActions()},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){var a=b.actions;1==angular.isDefined(a)&&(a=angular.fromJson(a),angular.isArray(a)?scope.actions=a:scope.actions.push(a));var c={editable:this.editAction,deletable:this.deleteAction};for(var d in c)angular.isDefined(b[d])&&scope.actions.push(c[d])},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},this.resolveOptions=function(){if(this.hasAttribute("options")){var a=this.getAttributeAsObject("options");scope.options=angular.extend(scope.options,a)}},this.hasAttribute=function(a){return 1==angular.isDefined(b[a])},this.getAttributeAsObject=function(a){var c=b[a];return angular.isString(c)&&(c=angular.fromJson(c)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){d.init()}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-model="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c(b.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){if(1==angular.isDefined(b.actions)){var a=angular.fromJson(b.actions);angular.isArray(a)?scope.actions=a:scope.actions.push(a)}var c={editable:this.editAction,deletable:this.deleteAction};for(var d in c)angular.isDefined(b[d])&&scope.actions.push(c[d])},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){if(a.text=d.resolveText(a.item),1==angular.isDefined(c.options)){var e=angular.fromJson(c.options);a.options=angular.extend(a.options,e)}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-model="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs","$parse",function(a,b,c){var d=c($attr.ngModel);d.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){if(1==angular.isDefined(b.actions)){var a=angular.fromJson(b.actions);angular.isArray(a)?scope.actions=a:scope.actions.push(a)}var c={editable:this.editAction,deletable:this.deleteAction};for(var d in c)angular.isDefined(b[d])&&scope.actions.push(c[d])},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){if(a.text=d.resolveText(a.item),1==angular.isDefined(c.options)){var e=angular.fromJson(c.options);a.options=angular.extend(a.options,e)}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-model="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope","$attrs",function(a,b){var c=$parse($attr.ngModel);c.assign,a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},a.isDropDown=function(a){return angular.isDefined(a.actions)},this.editAction={icon:"glyphicon-edit",label:"edit"},this.deleteAction={icon:"glyphicon-remove",label:"remove"},this.resolveActions=function(){if(1==angular.isDefined(b.actions)){var a=angular.fromJson(b.actions);angular.isArray(a)?scope.actions=a:scope.actions.push(a)}var c={editable:this.editAction,deletable:this.deleteAction};
for(var d in c)angular.isDefined(b[d])&&scope.actions.push(c[d])},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){if(a.text=d.resolveText(a.item),1==angular.isDefined(c.options)){var e=angular.fromJson(c.options);a.options=angular.extend(a.options,e)}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-model="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",require:["?ngModel"],scope:{ngModel:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-model="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listInputGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"list-input-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>'),a.put("list-input-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><!-- 	<input type="text" class="form-control" ng-model="text"> --><p class="form-control" ng-bind="text"></p><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="child.label"></span></a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="options.action.display.label"></span></a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!0,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="options.action.display.label"></span></a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="child in action.actions"><a ng-href=""><span class="glyphicon {{child.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="child.label" ng-if="options.action.display.label"></span></a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" ng-if="isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button> <button class="btn btn-default" type="button" ng-if="!isDropDown(action)"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu" ng-if="isDropDown(action)"><li ng-repeat="a in action.actions"><a ng-href=""><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})
}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default dropdown-toggle" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button" data-toggle="dropdown"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><div class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button><ul class="dropdown-menu dropdown-menu-right" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></div></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span><ul class="dropdown-menu" role="menu"><li><a href="#">Action</a></li><li><a href="#">Another action</a></li><li><a href="#">Something else here</a></li><li class="divider"></li><li><a href="#">Separated link</a></li></ul></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret" ng-if="isDropDown(action)"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> is drop down ? {{isDropDown(action)}} <span class="caret" ng-if="isDropDown(action)"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},this.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> is drop down ? {{isDropDown(action)}} <span class="caret" ng-if="isDropDown(action)"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},this.isDropDown=function(a){return angular.isDefined(a.actions)}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : isDropDown(action)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> {{isDropDown(action)}} <span class="caret" ng-if="isDropDown(action)"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : angular.isDefined(action.actions)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span> <span class="caret"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : angular.isDefined(action.actions)}" type="button"><span class="caret"></span> <span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : angular.isDefined(action.actions)}" type="button"><span class="caret" ng-if="angular.isDefined(action.actions)"></span> <span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" ng-class="{\'dropdown-toggle\' : angular.isDefined(action.actions)}" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-edit",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}if(1==angular.isDefined(e.actions)){var h=angular.fromJson(e.actions);angular.isArray(h)?a.actions=h:a.actions.push(h)}b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"}),1==angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"}),e.options){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))
}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={action:{display:{label:!1,icon:!0}}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"}),angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-if="options.action.display.icon"></span>&nbsp;<span ng-bind="action.label" ng-if="options.action.display.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={actions:{displayLabel:!1}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){if(a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"}),angular.isDefined(e.options)){var g=angular.fromJson(e.options);a.options=angular.extend(a.options,g)}}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span>&nbsp;<span ng-bind="action.label" ng-if="options.actions.displayLabel"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={actions:{displayLabel:!1}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"}),angular.isDefined(e.options)&&(a.options=angular.extend(a.options,e.options))}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span>&nbsp;<span ng-bind="action.label" ng-if="options.actions.displayLabel"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={actions:{displayLabel:!1}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"}),angular.isDefined(e.options)&&($scope.options=angular.extend($scope.options,e.options))}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span>&nbsp;<span ng-bind="action.label" ng-if="options.actions.displayLabel"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],a.options={actions:{displayLabel:!1}},this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span>&nbsp;<span ng-bind="action.label" ng-if="options.actions.displayLabel"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span>&nbsp;<span ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil",label:"edit"}),c(e)&&a.actions.push({icon:"glyphicon-remove",label:"remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span>&nbsp;<span ng-bind="label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil"}),c(e)&&a.actions.push({icon:"glyphicon-remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e){a.text="blah blah",b(e)&&a.actions.push({icon:"glyphicon-pencil"}),c(e)&&a.actions.push({icon:"glyphicon-remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e){a.text="blah blah",b(e)&&a.actions.push({icon:"glyphicon-pencil"}),c(e)&&a.actions.push({icon:"glyphicon-remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil"}),c(e)&&a.actions.push({icon:"glyphicon-remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil"}),c(e)&&a.actions.push({icon:"glyphicon-remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group-item"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil"}),c(e)&&a.actions.push({icon:"glyphicon-remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group editable-list-group_item"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}],b=function(a){return angular.isDefined(a.editable)},c=function(a){return angular.isDefined(a.deletable)};return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,d,e,f){a.text=f.resolveText(a.item),b(e)&&a.actions.push({icon:"glyphicon-pencil"}),c(e)&&a.actions.push({icon:"glyphicon-remove"})}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,b,c,d){a.text=d.resolveText(a.item),angular.isDefined(c.editable)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn"><button class="btn btn-default" type="button"><span class="glyphicon glyphicon-remove"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,b,c,d){a.text=d.resolveText(a.item),angular.isDefined(c.editable)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn"><button class="btn btn-default" type="button"><span class="glyphicon glyphicon-pencil"></span></button></span> <span class="input-group-btn"><button class="btn btn-default" type="button"><span class="glyphicon glyphicon-remove"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,b,c,d){a.text=d.resolveText(a.item),angular.isDefined(c.editable)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon glyphicon-remove"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,b,c,d){a.text=d.resolveText(a.item),angular.isDefined(c.editable)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn"><button class="btn btn-default" type="button"><span class="glyphicon glyphicon-pencil"></span></button></span> <span class="input-group-btn"><button class="btn btn-default" type="button"><span class="glyphicon glyphicon-remove"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,b,c,d){a.text=d.resolveText(a.item),angular.isDefined(c.editable)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,b,c,d){a.text=d.resolveText(a.item),angular.isDefined(c.editable)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control" ng-model="text"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.actions=[],this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&",editable:"@"},controller:a,link:function(a,b,c,d){a.text=d.resolveText(a.item),angular.isDefined(c.editable)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control" ng-model="text"></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){a.text=d.resolveText(a.item)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control" ng-model="text"></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,this.resolveText=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){$scope.text=d.resolveText(a.item)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control" ng-model="text"></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.text,this.resolveText=function(a){var b=scope.labelFn({item:a});return angular.isUndefined(b)&&(b=angular.toJson(a,!0)),b}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"=",labelFn:"&"},controller:a,link:function(a,b,c,d){$scope.text=d.resolveText(a.item)}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control" ng-model="text"></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.getText=function(){return"test"}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"="},controller:a,link:function(){}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><span ng-bind="getText()"></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){var a=["$scope",function(a){a.getText=function(){return"test"}}];return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"="},controller:a,link:function(){}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control" ng-bind="getText()"></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(a){a.getText}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group">test</div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",require:["item"],scope:{item:"="},link:function(a){a.getText}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group">test</div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(){}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html","<div>test</div>"),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(){}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html","test"),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(){}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'test<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(){console.log("editableListGroupItem")}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'test<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",terminal:!0,replace:!0,templateUrl:"editable-list-group-item.0html",scope:{item:"="},link:function(){console.log("editableListGroupItem")}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'test<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(){console.log("editableListGroupItem")}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'test<div class="input-group"><input type="text" class="form-control"><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(){console.log("editableListGroupItem")}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'test<div class="input-group"><input type="text" class="form-control"><!-- 	<span --><!-- 		class="input-group-btn"> --><!-- 		<button class="btn btn-default" type="button"> --><!-- 			<span class="glyphicon glyphicon-pencil"></span> --><!-- 		</button> --><!-- 	</span>  --><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')
}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(){}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'test<div class="input-group"><input type="text" class="form-control"><!-- 	<span --><!-- 		class="input-group-btn"> --><!-- 		<button class="btn btn-default" type="button"> --><!-- 			<span class="glyphicon glyphicon-pencil"></span> --><!-- 		</button> --><!-- 	</span>  --><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("editableListGroupItem",function(){return{restrict:"EA",templateUrl:"editable-list-group-item.html",scope:{item:"="},link:function(){}}}).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("editable-list-group-item.html",'<div class="input-group"><input type="text" class="form-control"><!-- 	<span --><!-- 		class="input-group-btn"> --><!-- 		<button class="btn btn-default" type="button"> --><!-- 			<span class="glyphicon glyphicon-pencil"></span> --><!-- 		</button> --><!-- 	</span>  --><span class="input-group-btn" ng-repeat="action in actions"><button class="btn btn-default" type="button"><span class="glyphicon {{action.icon}}" ng-bind="action.label"></span></button></span></div>'),a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.click=function(b){a.selected=b},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="click(item)"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},a.selected="test",angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),c},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return angular.isUndefined(c)&&(c=angular.toJson(b,!0)),console.log("label => "+c),c},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){a.getLabel=function(b){var c=a.labelFn({item:b});return console.log("label => "+c),c},angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(a){return angular.toJson(a,!0)},c=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,d,e){console.log("labelFn => "+a.labelFn),a.getLabel=angular.isDefined(a.labelFn)?function(b){return a.labelFn({item:b})}:b,angular.extend(a,c(a,e))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(a){return angular.toJson(a,!0)},c=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,d,e){console.log("labelFn => "+a.labelFn),a.getLabel=angular.isDefined(a.labelFn)?function(b){return a.labelFn({item:b})}:b,angular.extend(a,c(a,e))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(a){return angular.toJson(a,!0)},c=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,d,e){a.getLabel=angular.isDefined(a.labelFn)?function(b){return a.labelFn({item:b})}:b,angular.extend(a,c(a,e))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(a){return angular.toJson(a,!0)},c=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,d,e){a.getLabel=angular.isDefined(a.labelFn)?function(b){return a.labelFn({item:b})}:b,angular.extend(a,c(a,e))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){angular.isDefined(a.labelFn)&&(a.getLabel=function(b){return a.labelFn({item:b})}),angular.extend(a,b(a,d))}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b,c){for(var d in a)console.log("key => "+d),angular.isDefined(c[d])?a[d]=c[d]:angular.isDefined(b[d])&&(a[d]=b[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){angular.extend(a,b(a,d)),a.getLabel=a.labelFn}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b,c){for(var d in a)console.log("key => "+d),angular.isDefined(c[d])?a[d]=c[d]:angular.isDefined(b[d])&&(a[d]=b[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){angular.extend(a,b(a,d)),a.getLabel=a.labelFn}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b,c){for(var d in a)console.log("key => "+d),(angular.isUndefined(b[d])&&angular.isDefined(c[d]))===!0&&(console.log("set value => "+c[d]),a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){angular.extend(a,b(a,d)),a.getLabel=a.labelFn}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b,c){for(var d in a)console.log("key => "+d),(angular.isUndefined(b[d])&&angular.isDefined(c[d]))===!0&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){angular.extend(a,b(a,d)),a.getLabel=a.labelFn}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b,c){for(var d in a)console.log("key => "+d),angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){angular.extend(a,b(a,d)),a.getLabel=a.labelFn}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b,c){for(key in a)angular.isUndefined(b[key])&&angular.isDefined(c[key])&&(a[key]=c[key]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){angular.extend(a,b(a,d)),a.getLabel=a.labelFn}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b,c){for(var d in a)angular.isUndefined(b[d])&&angular.isDefined(c[d])&&(a[d]=c[d]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"=",labelFn:"&"},link:function(a,c,d){angular.extend(a,b(a,d)),a.getLabel=a.labelFn}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1,labelFn:function(a){return angular.toJson(a,!0)}},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=a.labelFn}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'selected => {{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'{{selected}}<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items" ng-class="{\'active\' : selected === item}" ng-click="selected = item"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,"true")&&(c="linked-list-group.html"),c},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item active" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return angular.equals(b.selectable,!0)&&(c="linked-list-group.html"),c},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item active" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(a,b){var c="list-group.html";return b.selectable===!0&&(c="linked-list-group.html"),c},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item active" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1},b=function(b){for(var c in a)angular.isDefined(b[c])&&(a[c]=b[c]);return a};return{terminal:!0,restrict:"EA",templateUrl:function(){return"list-group.html"},scope:{items:"="},link:function(a,c,d){angular.extend(a,b(d)),a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item active" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1};return{terminal:!0,restrict:"EA",templateUrl:function(){return"list-group.html"},scope:{items:"="},link:function(b,c,d){d=angular.extend(a,d),angular.extend(b,d),b.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item active" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){var a={selectable:!1};
return{terminal:!0,restrict:"EA",templateUrl:function(){return"list-group.html"},scope:{items:"=items"},link:function(b,c,d){d=angular.extend(d,a),angular.extend(b,d),b.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item active" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{terminal:!0,restrict:"EA",templateUrl:function(){return"list-group.html"},scope:{items:"=items"},link:function(a){a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("linked-list-group.html",'<div class="list-group"><a ng-href="" class="list-group-item active" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></a></div>'),a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{terminal:!0,restrict:"EA",templateUrl:"list-group.html",scope:{items:"=items"},link:function(a){a.getLabel=function(a){return angular.toJson(a,!0)}}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="getLabel(item)"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{terminal:!0,restrict:"EA",templateUrl:"list-group.html",scope:{items:"=items"}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("list-group.html",'toto<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{terminal:!0,restrict:"EA",templateUrl:"list-group.html",scope:{items:"=items"},link:function(){}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("list-group.html",'toto<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{terminal:!0,restrict:"EA",templateUrl:"list-group.html",scope:{items:"=items"},link:function(){}}}),angular.module("listgroup").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",["listgroup.templates"]).directive("listGroup",function(){return{terminal:!0,restrict:"EA",templateUrl:"list-group.html",scope:{items:"=items"},link:function(){}}}),angular.module("listGroup").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",["listgroup.templates"]).directive("listGroup",function(){return{terminal:!0,restrict:"EA",templateUrl:"list-group.html",scope:{items:"=items"},link:function(){}}}),angular.module("listgroup.templates").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",["listgroup.templates"]).directive("listGroup",function(){return{terminal:!0,restrict:"EA",templateUrl:"list-group.html",scope:{items:"=items"},link:function(){}}}),angular.module("listgroup.templates").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{}}),angular.module("listgroup.templates").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{}}),angular.module("angular-list-group.templates").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{}}),angular.module("angular-list-group-templates").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{}}),angular.module("test").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{}}),angular.module("listGroup").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group"><li class="list-group-item" ng-repeat="item in items"><span ng-bind="item"></span></li></ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{}}),angular.module("listGroup").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group">\r\n	<li class="list-group-item" ng-repeat="item in items"><span\r\n		ng-bind="item"></span></li>\r\n</ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{}}),angular.module("listGroup").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group">\r\n	<li class="list-group-item" ng-repeat="item in items"><span\r\n		ng-bind="item"></span></li>\r\n</ul>')}])}(window,document),!function(){"use strict";angular.module("listgroup",[]).directive("listGroup",function(){return{}}),angular.module("listGroup").run(["$templateCache",function(a){a.put("list-group.html",'<ul class="list-group">\r\n	<li class="list-group-item" ng-repeat="item in items"><span\r\n		ng-bind="item"></span></li>\r\n</ul>')}])}(window,document);